/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.programacion2.Micronometrojava;

import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.ImageIcon;

/**
 *
 * @author Sergio Enc
 */
public class MiCronometro extends javax.swing.JFrame implements Runnable{
    private boolean cronometroActivo = false;
    Thread hilo;

    /**
     * Creates new form MiCronometro
     */
    public MiCronometro() {
        
        initComponents();
        PanelDeFondo pdf = new PanelDeFondo();
        this.add(pdf, BorderLayout.CENTER);
        this.setLocationRelativeTo(null);
        cofiguracionDeVentana();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelMinuto = new javax.swing.JLabel();
        jLabelSegundo = new javax.swing.JLabel();
        jLabelMiliSegundo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonIniciarPausar = new javax.swing.JButton();
        jButtonRestablecer = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mi Cron√≥metro ");

        jLabelMinuto.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelMinuto.setForeground(new java.awt.Color(0, 204, 255));
        jLabelMinuto.setText("00");

        jLabelSegundo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelSegundo.setForeground(new java.awt.Color(0, 204, 255));
        jLabelSegundo.setText("00");

        jLabelMiliSegundo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelMiliSegundo.setForeground(new java.awt.Color(0, 204, 255));
        jLabelMiliSegundo.setText("000");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 255));
        jLabel5.setText(":");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 255));
        jLabel6.setText(":");

        jButtonIniciarPausar.setText("Iniciar");
        jButtonIniciarPausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarPausarActionPerformed(evt);
            }
        });

        jButtonRestablecer.setText("Detener");
        jButtonRestablecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRestablecerActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("2011-0932");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabelMinuto)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel5)
                                .addGap(2, 2, 2)
                                .addComponent(jLabelSegundo)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel6)
                                .addGap(2, 2, 2)
                                .addComponent(jLabelMiliSegundo))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonIniciarPausar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRestablecer)))
                        .addContainerGap(50, Short.MAX_VALUE))))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMinuto)
                    .addComponent(jLabelSegundo)
                    .addComponent(jLabelMiliSegundo)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIniciarPausar)
                    .addComponent(jButtonRestablecer))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIniciarPausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarPausarActionPerformed
        if(jButtonIniciarPausar.getText().equalsIgnoreCase("Iniciar") || 
                jButtonIniciarPausar.getText().equalsIgnoreCase("Reanudar"))
        {
            iniciarCronometro();
        }
        else
        {
            pausarCronometro();
        }
    }//GEN-LAST:event_jButtonIniciarPausarActionPerformed

    private void jButtonRestablecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRestablecerActionPerformed
        while(milesimas>0)
        {
            reiniciarCronometro();
        }
    }//GEN-LAST:event_jButtonRestablecerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MiCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MiCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MiCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MiCronometro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MiCronometro().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIniciarPausar;
    private javax.swing.JButton jButtonRestablecer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelMiliSegundo;
    private javax.swing.JLabel jLabelMinuto;
    private javax.swing.JLabel jLabelSegundo;
    // End of variables declaration//GEN-END:variables

    public void cofiguracionDeVentana()
    {
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/Icono1.png"));
        setIconImage(icon);
        setTitle("Mi Cronometro");
        setLocationRelativeTo(null);
        setResizable(false);
        setVisible(true);
    }
    
    Integer minutos = 0 , segundos = 0, milesimas = 0;
    public void run(){
        //min es minutos, seg es segundos y mil es milesimas de segundo
        String min="", seg="", mil="";
        try
        {
            //Mientras cronometroActivo sea verdadero entonces seguira
            //aumentando el tiempo
            while( cronometroActivo )
            {
                Thread.sleep( 4 );
                //Incrementamos 4 milesimas de segundo
                milesimas += 4;
                 
                //Cuando llega a 1000 osea 1 segundo aumenta 1 segundo
                //y las milesimas de segundo de nuevo a 0
                if( milesimas == 1000 )
                {
                    milesimas = 0;
                    segundos += 1;
                    //Si los segundos llegan a 60 entonces aumenta 1 los minutos
                    //y los segundos vuelven a 0
                    if( segundos == 60 )
                    {
                        segundos = 0;
                        minutos++;
                    }
                }
 
                //Esto solamente es estetica para que siempre este en formato
                //00:00:000
                if( minutos < 10 ) min = "0" + minutos;
                else min = minutos.toString();
                if( segundos < 10 ) seg = "0" + segundos;
                else seg = segundos.toString();
                 
                if( milesimas < 10 ) mil = "00" + milesimas;
                else if( milesimas < 100 ) mil = "0" + milesimas;
                else mil = milesimas.toString();
                 
                //Colocamos en la etiqueta la informacion
                jLabelMiliSegundo.setText( mil );
                jLabelSegundo.setText(seg);
                jLabelMinuto.setText(min);
            }
        }catch(Exception e){
        System.out.println(e);
        }
    }
    
    public void iniciarCronometro() {
        jButtonIniciarPausar.setText("Pausar");
        cronometroActivo = true;
        hilo = new Thread( this );
        hilo.start();
    }
  
    //Esto es para parar el cronometro
    public void reiniciarCronometro(){
        cronometroActivo = false;
        jButtonIniciarPausar.setText("Iniciar");
        minutos = 0;
        segundos = 0;
        milesimas = 0;
        jLabelMiliSegundo.setText( "000" );
        jLabelSegundo.setText( "00" );
        jLabelMinuto.setText( "00" );
    }
    
    public void pausarCronometro()
    {
        jButtonIniciarPausar.setText("Reanudar");
        cronometroActivo = false;
        
    }
}
